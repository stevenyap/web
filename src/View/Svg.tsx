const Svg = {
  Alert: {
    Error: AlertError,
    Loading: AlertLoading,
    Success: AlertSuccess,
  },
}

export type Props = {
  color?: string
  width?: string
  height?: string
  className?: string
}

function AlertError({ color, width, height, className }: Props): JSX.Element {
  return (
    <svg
      width={width ?? "24px"}
      height={height ?? "24px"}
      className={className}
      viewBox="0 0 24 24"
    >
      <g>
        <path
          style={{
            stroke: "none",
            fillRule: "evenodd",
            fill: color ?? "rgb(94.901961%,12.54902%,0%)",
            fillOpacity: 1,
          }}
          d="M 21 12 C 21 16.96875 16.96875 21 12 21 C 7.03125 21 3 16.96875 3 12 C 3 7.03125 7.03125 3 12 3 C 16.96875 3 21 7.03125 21 12 Z M 11.15625 7.5 L 11.15625 13.125 L 12.84375 13.125 L 12.84375 7.5 Z M 11.15625 14.25 L 11.15625 16.5 L 12.84375 16.5 L 12.84375 14.25 Z M 11.15625 14.25 "
        />
      </g>
    </svg>
  )
}

function AlertLoading({ color, width, height, className }: Props): JSX.Element {
  return (
    <svg
      width={width ?? "24px"}
      height={height ?? "24px"}
      className={className}
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M12.75 3.75V5.25C12.75 5.44891 12.671 5.63968 12.5303 5.78033C12.3897 5.92098 12.1989 6 12 6C11.8011 6 11.6103 5.92098 11.4697 5.78033C11.329 5.63968 11.25 5.44891 11.25 5.25V3.75C11.25 3.55109 11.329 3.36032 11.4697 3.21967C11.6103 3.07902 11.8011 3 12 3C12.1989 3 12.3897 3.07902 12.5303 3.21967C12.671 3.36032 12.75 3.55109 12.75 3.75ZM12 18C11.8011 18 11.6103 18.079 11.4697 18.2197C11.329 18.3603 11.25 18.5511 11.25 18.75V20.25C11.25 20.4489 11.329 20.6397 11.4697 20.7803C11.6103 20.921 11.8011 21 12 21C12.1989 21 12.3897 20.921 12.5303 20.7803C12.671 20.6397 12.75 20.4489 12.75 20.25V18.75C12.75 18.5511 12.671 18.3603 12.5303 18.2197C12.3897 18.079 12.1989 18 12 18ZM6 12C6 11.8011 5.92098 11.6103 5.78033 11.4697C5.63968 11.329 5.44891 11.25 5.25 11.25H3.75C3.55109 11.25 3.36032 11.329 3.21967 11.4697C3.07902 11.6103 3 11.8011 3 12C3 12.1989 3.07902 12.3897 3.21967 12.5303C3.36032 12.671 3.55109 12.75 3.75 12.75H5.25C5.44891 12.75 5.63968 12.671 5.78033 12.5303C5.92098 12.3897 6 12.1989 6 12ZM20.25 11.25H18.75C18.5511 11.25 18.3603 11.329 18.2197 11.4697C18.079 11.6103 18 11.8011 18 12C18 12.1989 18.079 12.3897 18.2197 12.5303C18.3603 12.671 18.5511 12.75 18.75 12.75H20.25C20.4489 12.75 20.6397 12.671 20.7803 12.5303C20.921 12.3897 21 12.1989 21 12C21 11.8011 20.921 11.6103 20.7803 11.4697C20.6397 11.329 20.4489 11.25 20.25 11.25ZM16.5135 4.2135C16.4283 4.16408 16.3341 4.13193 16.2365 4.11891C16.1388 4.10588 16.0395 4.11222 15.9443 4.13757C15.8491 4.16293 15.7598 4.20679 15.6816 4.26666C15.6033 4.32653 15.5376 4.40123 15.4882 4.4865L14.7382 5.78475C14.6387 5.95692 14.6117 6.16156 14.663 6.35368C14.7143 6.5458 14.8399 6.70967 15.012 6.80925C15.1258 6.87578 15.2552 6.91073 15.387 6.9105C15.5187 6.9105 15.648 6.87584 15.762 6.81001C15.876 6.74419 15.9707 6.64951 16.0365 6.5355L16.7865 5.23725C16.8858 5.06524 16.9129 4.86085 16.8617 4.66892C16.8105 4.47699 16.6853 4.31321 16.5135 4.2135ZM8.99025 17.1908C8.81817 17.0912 8.6136 17.064 8.42149 17.1152C8.22938 17.1664 8.06546 17.2917 7.96575 17.4637L7.21575 18.762C7.11617 18.9341 7.08899 19.1387 7.14019 19.3308C7.19138 19.5229 7.31675 19.6868 7.48875 19.7865C7.60254 19.853 7.73198 19.8879 7.86375 19.8878C7.99553 19.8879 8.12501 19.8533 8.23916 19.7875C8.35332 19.7216 8.44811 19.6269 8.514 19.5128L9.264 18.2145C9.36328 18.0424 9.39021 17.8379 9.33888 17.646C9.28756 17.4541 9.16217 17.2903 8.99025 17.1908ZM6.53625 7.96575L5.238 7.21575C5.06629 7.12334 4.86534 7.10145 4.67776 7.1547C4.49018 7.20796 4.33071 7.33218 4.23317 7.50102C4.13563 7.66987 4.10768 7.87006 4.15525 8.05917C4.20282 8.24827 4.32217 8.41141 4.488 8.514L5.78625 9.264C5.95796 9.3564 6.15891 9.3783 6.34649 9.32505C6.53407 9.27179 6.69354 9.14757 6.79108 8.97873C6.88862 8.80988 6.91657 8.60969 6.869 8.42058C6.82143 8.23148 6.70208 8.06834 6.53625 7.96575ZM19.5112 15.4882L18.213 14.7382C18.0413 14.6458 17.8403 14.6239 17.6528 14.6772C17.4652 14.7305 17.3057 14.8547 17.2082 15.0235C17.1106 15.1924 17.0827 15.3926 17.1303 15.5817C17.1778 15.7708 17.2972 15.9339 17.463 16.0365L18.7612 16.7865C18.875 16.853 19.0045 16.888 19.1362 16.8878C19.3013 16.8877 19.4618 16.8333 19.5928 16.7328C19.7238 16.6322 19.8179 16.4913 19.8607 16.3319C19.9034 16.1724 19.8923 16.0033 19.8291 15.8508C19.766 15.6982 19.6542 15.5708 19.5112 15.4882ZM8.51175 4.4865C8.40916 4.32067 8.24602 4.20132 8.05692 4.15375C7.86781 4.10618 7.66762 4.13413 7.49877 4.23167C7.32993 4.32921 7.20571 4.48868 7.15245 4.67626C7.0992 4.86384 7.1211 5.06479 7.2135 5.2365L7.9635 6.53475C8.02932 6.64876 8.124 6.74344 8.23801 6.80926C8.35202 6.87509 8.48135 6.90975 8.613 6.90975C8.74478 6.90998 8.87424 6.87503 8.988 6.8085C9.16013 6.70892 9.28566 6.54505 9.33699 6.35293C9.38833 6.16081 9.36126 5.95617 9.26175 5.784L8.51175 4.4865ZM16.0343 17.4615C15.9317 17.2957 15.7685 17.1763 15.5794 17.1287C15.3903 17.0812 15.1901 17.1091 15.0213 17.2067C14.8524 17.3042 14.7282 17.4637 14.675 17.6513C14.6217 17.8388 14.6436 18.0398 14.736 18.2115L15.486 19.5098C15.5886 19.6756 15.7517 19.7949 15.9408 19.8425C16.1299 19.8901 16.3301 19.8621 16.499 19.7646C16.6678 19.667 16.792 19.5076 16.8453 19.32C16.8986 19.1324 16.8767 18.9315 16.7843 18.7598L16.0343 17.4615ZM17.8403 9.3615C17.9719 9.36149 18.1012 9.32683 18.2153 9.261L19.5135 8.511C19.6793 8.40841 19.7987 8.24527 19.8462 8.05617C19.8938 7.86706 19.8659 7.66687 19.7683 7.49802C19.6708 7.32917 19.5113 7.20496 19.3237 7.1517C19.1362 7.09845 18.9352 7.12035 18.7635 7.21275L17.4653 7.96275C17.3226 8.04547 17.2113 8.17287 17.1484 8.32524C17.0854 8.47762 17.0745 8.64648 17.1172 8.80572C17.1598 8.96495 17.2538 9.10568 17.3845 9.20614C17.5152 9.30661 17.6754 9.36121 17.8403 9.3615ZM5.78475 14.736L4.4865 15.486C4.34353 15.5686 4.23179 15.696 4.16862 15.8485C4.10544 16.001 4.09436 16.1701 4.13709 16.3296C4.17982 16.4891 4.27397 16.63 4.40495 16.7305C4.53593 16.831 4.69641 16.8855 4.8615 16.8855C4.99328 16.8857 5.12274 16.8508 5.2365 16.7843L6.53475 16.0343C6.70058 15.9317 6.81993 15.7685 6.8675 15.5794C6.91507 15.3903 6.88712 15.1901 6.78958 15.0213C6.69204 14.8524 6.53257 14.7282 6.34499 14.675C6.15741 14.6217 5.95646 14.6436 5.78475 14.736Z"
        fill={color ?? "#6E6E6E"}
      />
      <path
        d="M11.4695 18.2197C11.6101 18.0791 11.8009 18 11.9998 18C12.1987 18 12.3895 18.0791 12.5301 18.2197C12.6708 18.3604 12.7498 18.5511 12.7498 18.75V20.25C12.7498 20.449 12.6708 20.6397 12.5301 20.7804C12.3895 20.921 12.1987 21 11.9998 21C11.8009 21 11.6101 20.921 11.4695 20.7804C11.3288 20.6397 11.2498 20.449 11.2498 20.25V18.75C11.2498 18.5511 11.3288 18.3604 11.4695 18.2197Z"
        fill="white"
      />
      <path
        d="M8.42129 17.1152C8.61339 17.064 8.81797 17.0912 8.99005 17.1908C9.16197 17.2904 9.28736 17.4541 9.33868 17.646C9.39 17.838 9.36307 18.0424 9.2638 18.2145L8.5138 19.5128C8.44791 19.6269 8.35311 19.7217 8.23896 19.7875C8.12481 19.8533 7.99532 19.8879 7.86355 19.8878C7.73177 19.888 7.60233 19.853 7.48855 19.7865C7.31655 19.6868 7.19117 19.5229 7.13998 19.3308C7.08879 19.1387 7.11597 18.9341 7.21555 18.762L7.96555 17.4638C8.06525 17.2918 8.22918 17.1664 8.42129 17.1152Z"
        fill="white"
      />
      <path
        d="M4.4863 15.486L5.78455 14.736C5.95626 14.6436 6.1572 14.6217 6.34479 14.675C6.53237 14.7283 6.69184 14.8525 6.78938 15.0213C6.88692 15.1902 6.91487 15.3904 6.8673 15.5795C6.81972 15.7686 6.70037 15.9317 6.53455 16.0343L5.2363 16.7843C5.12254 16.8508 4.99308 16.8858 4.8613 16.8855C4.6962 16.8855 4.53572 16.8311 4.40475 16.7306C4.27377 16.63 4.17961 16.4891 4.13688 16.3297C4.09415 16.1702 4.10524 16.0011 4.16841 15.8486C4.23159 15.696 4.34332 15.5686 4.4863 15.486Z"
        fill="white"
      />
    </svg>
  )
}

function AlertSuccess({ color, width, height, className }: Props): JSX.Element {
  return (
    <svg
      width={width ?? "24px"}
      height={height ?? "24px"}
      className={className}
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M20 12C20 16.4183 16.4183 20 12 20C7.58172 20 4 16.4183 4 12C4 7.58172 7.58172 4 12 4C16.4183 4 20 7.58172 20 12ZM16.055 9.50449L11.055 15.0045L9.96967 15.0303L7.46967 12.5303L8.53033 11.4697L10.4741 13.4135L14.945 8.49548L16.055 9.50449Z"
        fill={color ?? "#00CC40"}
      />
    </svg>
  )
}

export default Svg
